#!/bin/bash

# bac - Basic Avalanche CLI
# Copyright (C) 2020 Jean Zundel <jzu@free.fr>
# See https://github.com/jzu/bac
#
# Bash wrapper around the Avalanche JSON API

export LANG=C
export LC_ALL=C

if [ $# -eq 0 ] 
then
  echo "Usage: bac [-f] service.method [key:value ...]"
  echo "       bac [-h]"
  exit 1
fi

if [ $1 = -h ]
then
  echo 'bac - Basic Avalanche CLI'
  echo
  echo "Usage: bac [-f] service.method [key:value ...]"
  echo
  echo '-f formats the output using jq.'
  echo 'Arguments are key:value pairs (quotes unnecessary).'
  echo 'Endpoint is inferred from the service part of the method.'
  echo
  echo 'Example: '
  echo 'bac -f avm.getBalance address:X-avax1tmnpf87ph0pap4p507zfr0zesafnj5qh0sdkjc assetID:AVAX'
  echo
  echo 'bash -x bac ... will show the full curl command.'
  echo
  echo 'Providing an incomplete method name (i.e. without . or _) has it grepped'
  echo 'in [/usr/local/etc/]bac.sigs and matching method signatures are displayed.'
  exit
fi

FORMAT="cat"
if [ $1 = "-f" ]
then
  if which jq >/dev/null
  then
    FORMAT="jq . -"
  else
    echo 'Please install the jq package' 1>&2
  fi
  shift
fi

[ -f /usr/local/etc/bac.sigs ] && \
  SIGS=/usr/local/etc/bac.sigs

[ -f bac.sigs ] && \
  SIGS=bac.sigs

if ! echo $* | egrep -q '\.|_'
then
  [ -z "$SIGS" ] && \
    exit 1
  grep -i "$1" "$SIGS"
  exit
fi

METHOD=$1
ENDPOINT=`echo $METHOD \
          | sed -e 's/\..*//' \
                -e 's:avm:bc/X:' \
                -e 's:platform:bc/P:' \
                -e 's:[^/]*_.*:bc/C/rpc:' \
                -e 's:timestamp:bc/timestamp:'`
shift

if echo $* | grep -q : 
then
  PARAMS=`echo $* \
          | sed -e 's/:/":"/g' \
                -e 's/^/,"params":{"/' \
                -e 's/$/"}/' \
                -e 's/ /","/g'`
fi

curl -X POST \
     --data '{
       "jsonrpc":"2.0",
       "id"     :1,
       "method" :"'$METHOD'" '$PARAMS'
     }' \
     -H 'content-type:application/json;' 2>/dev/null \
     127.0.0.1:9650/ext/$ENDPOINT \
| $FORMAT
